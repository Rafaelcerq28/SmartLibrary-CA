/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.library.client;

import java.util.Iterator;

import javax.swing.JOptionPane;

import com.grpcfiles.BookManagementGrpc;
import com.grpcfiles.BookManagementGrpc.BookManagementBlockingStub;
import com.grpcfiles.BookOuterClass.BookRequest;
import com.grpcfiles.BookOuterClass.BookResponse;
import com.grpcfiles.BookOuterClass.BookStatusRequest;
import com.grpcfiles.Loan.LoanRequest;
import com.grpcfiles.Loan.LoanResponse;
import com.grpcfiles.LoanManagementGrpc;
import com.grpcfiles.LoanManagementGrpc.LoanManagementBlockingStub;
import com.grpcfiles.UserManagementGrpc;
import com.grpcfiles.UserManagementGrpc.UserManagementBlockingStub;
import com.grpcfiles.UserOuterClass.UserRequest;
import com.grpcfiles.UserOuterClass.UserResponse;
import com.library.server.ServiceRegistration;

import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;
import io.grpc.StatusRuntimeException;

/**
 *
 * @author Rafa
 */
public class Client extends javax.swing.JFrame {
    //User variables
    ManagedChannel userChannel;
    UserManagementBlockingStub userStub;
    UserRequest userRequest;
    UserResponse response;

    //Book Variables
    ManagedChannel bookChannel;
    BookManagementBlockingStub bookStub;
    BookRequest bookRequest;
    BookResponse bookResponse;
    BookStatusRequest bookStatusRequest;
    //Loan Variables
    ManagedChannel libraryChannel;
    LoanManagementBlockingStub libraryStub;
    LoanRequest loanRequest;
    LoanResponse loanResponse;

    public Client() {
        
        //User Channel/Stub
        this.userChannel = ManagedChannelBuilder.forAddress("localhost", 9090).usePlaintext().build();
        this.userStub = UserManagementGrpc.newBlockingStub(userChannel);
        //Book Channel/Stub 
        this.bookChannel = ManagedChannelBuilder.forAddress("localhost", 9091).usePlaintext().build();
        this.bookStub = BookManagementGrpc.newBlockingStub(bookChannel);
        //Loan Channel/Stub
        this.libraryChannel = ManagedChannelBuilder.forAddress("localhost", 9092).usePlaintext().build();
        this.libraryStub = LoanManagementGrpc.newBlockingStub(libraryChannel);

        try {
            ServiceRegistration userServerRegistration = new ServiceRegistration();            
            userServerRegistration.serviceRegistration("userService", "user server", 9090);

            ServiceRegistration bookServerRegistration = new ServiceRegistration();
            bookServerRegistration.serviceRegistration("bookService", "book server", 9090);
            
            ServiceRegistration libraryServerRegistration = new ServiceRegistration();
            libraryServerRegistration.serviceRegistration("libraryService", "library server", 9090);
        } catch (InterruptedException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        //Call the GUI components
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        addUserBtn = new javax.swing.JButton();
        delUserBtn = new javax.swing.JButton();
        showUserBtn = new javax.swing.JButton();
        addBookBtn = new javax.swing.JButton();
        deleteBookBtn = new javax.swing.JButton();
        showBooksBtn = new javax.swing.JButton();
        borrowBookBtn = new javax.swing.JButton();
        returnBookBtn = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        exitBtn = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        addUserBtn.setText("Add User");
        addUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserBtnActionPerformed(evt);
            }
        });

        delUserBtn.setText("Delete User");
        delUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delUserBtnActionPerformed(evt);
            }
        });

        showUserBtn.setText("Show All Users");
        showUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showUserBtnActionPerformed(evt);
            }
        });

        addBookBtn.setText("Add Book");
        addBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookBtnActionPerformed(evt);
            }
        });

        deleteBookBtn.setText("Delete Book");
        deleteBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBookBtnActionPerformed(evt);
            }
        });

        showBooksBtn.setText("Show All Books");
        showBooksBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showBooksBtnActionPerformed(evt);
            }
        });

        borrowBookBtn.setText("Borrow Book");
        borrowBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowBookBtnActionPerformed(evt);
            }
        });

        returnBookBtn.setText("Return Book");
        returnBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBookBtnActionPerformed(evt);
            }
        });

        jButton9.setText("jButton9");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(delUserBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showUserBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addUserBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(85, 85, 85)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(showBooksBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteBookBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addBookBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(85, 85, 85)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(borrowBookBtn))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton9))))
                    .addComponent(returnBookBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(addBookBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(deleteBookBtn)
                .addGap(33, 33, 33)
                .addComponent(showBooksBtn)
                .addGap(31, 31, 31))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .addComponent(jSeparator2))
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(addUserBtn)
                        .addGap(34, 34, 34)
                        .addComponent(delUserBtn)
                        .addGap(30, 30, 30)
                        .addComponent(showUserBtn)
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(borrowBookBtn)
                        .addGap(38, 38, 38)
                        .addComponent(returnBookBtn)
                        .addGap(37, 37, 37)
                        .addComponent(jButton9)
                        .addGap(27, 27, 27))))
        );

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        exitBtn.setText("Close");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(402, 402, 402)
                        .addComponent(exitBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exitBtn)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookBtnActionPerformed
        String isbn,author,title;

        isbn = JOptionPane.showInputDialog("Insert the book ISBN");
        author = JOptionPane.showInputDialog("Insert the author's name");
        title = JOptionPane.showInputDialog("Insert the book's title");

        bookRequest = BookRequest.newBuilder().
                                setIsbn(isbn).
                                setAuthor(author).
                                setTitle(title).
                                build();

        bookResponse = bookStub.addBook(bookRequest);
        // show the return message
        textArea.setText(bookResponse.getMessage());
    }//GEN-LAST:event_addBookBtnActionPerformed

    private void delUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delUserBtnActionPerformed
        try{
            int id = Integer.parseInt(JOptionPane.showInputDialog("Insert the user ID to remove"));
            //to remove user
            userRequest = UserRequest.newBuilder().setUserId(id).build();
            response = userStub.removeUsers(userRequest);
            textArea.setText(response.getMessage());
        }catch(StatusRuntimeException e){
            JOptionPane.showMessageDialog(null, "User Server is Offline.","Error", JOptionPane.ERROR_MESSAGE);
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "This field accepts only numbers","Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_delUserBtnActionPerformed

    private void showUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showUserBtnActionPerformed
        try{

            java.util.Iterator<UserResponse> responseList = userStub.getUsers(null);
            //iterates my iteratos to return a list os users
            StringBuilder sb = new StringBuilder();
            sb.append("List of users:\n");
            while (responseList.hasNext()) {
                sb.append(responseList.next().getMessage()).append("\n");
            }
            
            textArea.setText(sb.toString());
        }catch(StatusRuntimeException e){
            JOptionPane.showMessageDialog(null, "User Server is Offline.","Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_showUserBtnActionPerformed

    private void deleteBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBookBtnActionPerformed
        int id = Integer.parseInt(JOptionPane.showInputDialog("Insert the book ID to delete"));

        bookRequest = bookRequest.newBuilder().
        setBookId(id).
        build();

        bookResponse = bookStub.removeBook(bookRequest);
        textArea.setText(bookResponse.getMessage());
    }

    private void showBooksBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showBooksBtnActionPerformed
        
        Iterator<BookResponse> responseList = bookStub.listBooks(null);
        StringBuilder sb = new StringBuilder();
        sb.append("List of Books\n");
        // iterates my iteratos to return a list os users
        while (responseList.hasNext()) {
            sb.append(responseList.next().getMessage()).append("\n");
        }

        textArea.setText(sb.toString());

    }//GEN-LAST:event_showBooksBtnActionPerformed

    private void borrowBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowBookBtnActionPerformed
        int bookId,userId;
        String bookName,userName;

        bookId = Integer.parseInt(JOptionPane.showInputDialog("Insert the book ID to BORROW"));
        userId = Integer.parseInt(JOptionPane.showInputDialog("Insert the user ID"));
        bookName = "";//JOptionPane.showInputDialog("Insert the book's name ");
        userName = "";//JOptionPane.showInputDialog("Insert the user's name ");

        StringBuilder sb = new StringBuilder();

        loanRequest = LoanRequest.newBuilder().
                                setBookId(bookId).setUserId(userId).
                                setBookName(bookName).
                                setUserName(userName).
                                build();

        loanResponse = libraryStub.borrowBook(loanRequest);

        bookStatusRequest = BookStatusRequest.newBuilder().
                                                setBookId(bookId).
                                                setIsLoaned(true).
                                                build();

        BookResponse bookResponse = bookStub.bookTransaction(bookStatusRequest);
        sb.append(bookResponse.getMessage());
        textArea.setText(sb.toString());
    }//GEN-LAST:event_borrowBookBtnActionPerformed

    private void returnBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBookBtnActionPerformed
        int bookId,userId;
        String bookName,userName;

        bookId = Integer.parseInt(JOptionPane.showInputDialog("Insert the book ID to RETURN"));
        userId = Integer.parseInt(JOptionPane.showInputDialog("Insert the user ID"));
        bookName = "";//JOptionPane.showInputDialog("Insert the book's name ");
        userName = "";//JOptionPane.showInputDialog("Insert the user's name ");

        StringBuilder sb = new StringBuilder();

        loanRequest = LoanRequest.newBuilder().
                                setBookId(bookId).setUserId(userId).
                                setBookName(bookName).
                                setUserName(userName).
                                build();

        loanResponse = libraryStub.borrowBook(loanRequest);

        bookStatusRequest = BookStatusRequest.newBuilder().
                                                setBookId(bookId).
                                                setIsLoaned(false).
                                                build();

        BookResponse bookResponse = bookStub.bookTransaction(bookStatusRequest);
        sb.append(bookResponse.getMessage());
        textArea.setText(sb.toString());
    }//GEN-LAST:event_returnBookBtnActionPerformed

    private void addUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserBtnActionPerformed
        try{
            String name,phone,address;

            name = JOptionPane.showInputDialog("Insert the user name");
            phone = JOptionPane.showInputDialog("Insert the user's phone");
            address = JOptionPane.showInputDialog("Insert the user's address");

            userRequest = UserRequest.newBuilder().
                                            setName(name).
                                            setPhone(phone).
                                            setAddress(address).
                                            build();

            response = userStub.addUser(userRequest);  

            textArea.setText(response.getMessage());
        }catch(StatusRuntimeException e){
            JOptionPane.showMessageDialog(null, "User Server is Offline.","Error", JOptionPane.ERROR_MESSAGE);
        }catch(NumberFormatException e){

        }
    }//GEN-LAST:event_addUserBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
            System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBookBtn;
    private javax.swing.JButton addUserBtn;
    private javax.swing.JButton borrowBookBtn;
    private javax.swing.JButton delUserBtn;
    private javax.swing.JButton deleteBookBtn;
    private javax.swing.JToggleButton exitBtn;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton returnBookBtn;
    private javax.swing.JButton showBooksBtn;
    private javax.swing.JButton showUserBtn;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
